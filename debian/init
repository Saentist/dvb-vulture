#!/bin/sh
#
# dvbv-stream   /etc/init.d/ minimal initscript for DVB Vulture
#               uses default pidfile and config file
#               not suited for multi-device setups
#               Distributed under the GPL version 3
#

### BEGIN INIT INFO
# Provides: dvbvulture
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop dvb streaming server
# Description:  DVB Vulture is a lightweight DVB stream 
# server and EPG/VT aggregator
#
### END INIT INFO

. /lib/lsb/init-functions

NAME="dvbv-stream"
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/${NAME}
DESC="DVB Vulture Streaming Server"
PIDFILE=/var/run/${NAME}.pid
ARGS=""

set -e

test -x ${DAEMON} || exit 0

STARTDVB="false"
[ -r /etc/default/dvbvulture ] && . /etc/default/dvbvulture
if [ "$STARTDVB" != "true" ] && [ "$STARTDVB" != "YES" ] && [ "$1" != "stop" ]; then
	log_warning_msg "STARTDVB is set to false(default)."
	log_warning_msg "STARTDVB can be enabled in /etc/default/dvbvulture."
	log_warning_msg "$DAEMON not starting"
	exit 0
fi

if [ ! -e "/etc/dvbvulture/sa.conf" ]; then
	log_action_msg "DVB Vulture Server"
	log_action_msg "The server configuration file is missing."
	log_action_msg "The server will create an empty one in /etc/dvbvulture/sa.conf on startup."
	log_action_msg "You may have to edit it unless you are fine with the defaults."
fi

START="--start --quiet --pidfile ${PIDFILE} --exec ${DAEMON} -- ${ARGS}"

case "$1" in
  start)
	log_daemon_msg "Starting" "${NAME}"
	if start-stop-daemon ${START} >/dev/null; then
		log_end_msg 0
	else
		if start-stop-daemon --test ${START}  >/dev/null 2>&1; then
			log_end_msg 1
			exit 1
		else
			log_end_msg 0
			log_action_msg  " (already running) "
			exit 0
		fi
	fi
	;;
  stop)
	log_daemon_msg "Stopping" "${NAME}"
	if start-stop-daemon --stop --quiet --oknodo \
          --pidfile /var/run/${NAME}.pid --retry TERM/60 ; then
		log_end_msg 0
	else
		log_end_msg 1
		exit 1
	fi
	;;
  restart|force-reload)
  	$0 stop
	exec $0 start
  	;;
  status)
	status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
  	;;
  *)
    echo "Usage: $0 {start|stop|restart|force-reload|status}" >&2
    exit 1
esac
 
exit 0
